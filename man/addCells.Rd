% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addCells.R
\name{addCells}
\alias{addCells}
\title{Add cells to an existing cnr}
\usage{
addCells(cnr, newX, newY, newqc, newYe = NULL, do.clean = TRUE, ...)
}
\arguments{
\item{cnr}{a cnr bundle}

\item{newX}{bin data for the new cells to be incorporated}

\item{newY}{phenotype data for the new cells}

\item{newqc}{qc metadata for the new cells}

\item{newYe}{exprssion data for new cells}

\item{do.clean}{weather to remove additional data stored in the cnr, default is TRUE}

\item{...}{additional parameters if needed}
}
\description{
The function deals a little with the n+1 problem.
}
\details{
Your data needs to `exact` to the existing cnr for it to be compatible.
 This means it needs to have the same bin coordinates and number of X bins, annotation colums, and same qc colums.  It is assumed you generated it with the same pipeline
}
\examples{

library(gac)
data(cnr)
sapply(cnr, dim)

data(pheno)
data(qc)

## new X w simulated data
newX <- data.frame(cbind(rep(c(5,2), c(3000, 2000)),
                        rep(c(2,4),  c(3000, 2000))))
names(newX) <- paste0("cell", 13:14)
head(newX)
tail(newX)

## creating new phenotypes
newY <- head(pheno, n = 2)
newY$cellID <- paste0("cell", 13:14)
rownames(newY) <- newY$cellID
newY[, c(6:9)] <- newY[,c(6,9)]+3

newY

## creating new QC
newQC <- head(qc, 2)
newQC$cellID <- paste0("cell", 13:14)
rownames(newQC) <- newQC$cellID

newQC[,2:4] <- newQC[,2:4] + 2
newQC

## add cells
cnr <- addCells(cnr, newX = newX, newY = newY, newqc = newQC)
sapply(cnr, dim)


}
