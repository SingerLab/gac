% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genetic_diversity.R
\name{percent_genome_gain}
\alias{percent_genome_gain}
\title{calculate the proportion of the genome with gains}
\usage{
percent_genome_gain(
  cnr,
  by = NULL,
  gain.thresholds = c(3, 5),
  noise.threshold = 0.1,
  genome.size = 3098825702,
  exclude.chr = NULL,
  chrom.col = "bin.chrom"
)
}
\arguments{
\item{cnr}{a cnr bundle}

\item{by}{character, estimate percent genome loss at population, clone,
or cell levels. Options are NULL, "clone", and "cell".  When NULL the
estimate is done at the population level using bin alteration frequencies.
Using "clone", and "cell", genome loss is performed using the clone profiles
(DDRC.df), and cell profiles (X), respectively. Default NULL}

\item{gain.thresholds}{lower and upper bound copy number at which a locus
should considered a gain. The threshold is ignored when by = NULL.
If only one value is provided, all copy numbers above that value are
treated as a gain.  Default 3 to 5.}

\item{noise.threshold}{lower-bound alteration frequency at
which alterations are considered technical noise, rather
than a true alteration, default 0.1, ignored when by is "clone" or "cell"}

\item{genome.size}{size of the genome in base pairs.
default 3098825702, human genome}

\item{exclude.chr}{vector, chromosomes to exclude}

\item{chrom.col}{name of column containing chromosomes}
}
\value{
The value of the percent genome gained across a population of cells.
gaines are considered when cell or clone copy numers are CN >= 3 & CN <= 5.
CN >= 6, it's considerd an amplification, consistent with \code{\link{callCN}}

In the analysis by.clone = TRUE, the default is to consider all
copy numbers <= 1 as altered. For this, it's considered, at the moment,
that chromosomes X and Y have are to have two copies
}
\description{
calculate the proportion of the genome with gains
}
\examples{

data(cnr)

noisy.cells <- cnr$qc$cellID[cnr$qc$qc.status == "FAIL"]

## reduced pipeline to genrate DDRC clone profiles
cnr <- excludeCells(cnr, excl = noisy.cells)
cnr <- phyloCNR(cnr, root.cell = "cell0")
cnr <- setBrayClusters(cnr)
cnr <- run_consensus_clustering(cnr, iters = 20, maxK = 40)
cnr <- doKSpectral(cnr)
cnr <- setKcc(cnr)
cnr <- cluster_heterogeneity(cnr, by = "category1",
          cluster_column = "ConsensusC")
cnr <- get_cluster_profiles(cnr)
cnr <- get_alteration_frequencies(cnr)

percent_genome_gain(cnr)

percent_genome_gain(cnr, by = "cell")

percent_genome_gain(cnr, by = "clone")

}
